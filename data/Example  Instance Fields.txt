The declaration Code section 2.1: Declaration.1 private java.awt.Point point0, point1; ...declares two instance fields. Instance fields represent named values that are allocated whenever an instance of the class is constructed. When a Java program creates a Distance instance, that instance will contain space for point0 and point1. When another Distance object is created, it will contain space for its own point0 and point1 values. The value of point0 in the first Distance object can vary independently of the value of point0 in the second Distance object. This declaration consists of: These two fields could also have been declared with two separate but more verbose declarations, Code section 2.2: Verbose declarations.1  private java.awt.Point point0;2  private java.awt.Point point1; Since the type of these fields is a reference type (i.e. a field that refers to or can hold a reference to an object value), Java will implicitly initialize the values of point0 and point1 to null when a Distance instance is created. The null value means that a reference value does not refer to an object. The special Java literal null is used to represent the null value in a program. While you can explicitly assign null values in a declaration, as in Code section 2.3: Declarations and assignments.1  private java.awt.Point point0 = null;2  private java.awt.Point point1 = null; It is not necessary and most programmers omit such default assignments.