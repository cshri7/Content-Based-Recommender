Up until now, you have been able to draw a simple rectangle for yourself while asking a question silently, "why is the outline of the rectangle being painted rather the area as a whole?" The answer is simple. Any method that starts with drawXxxx(...) only draws the outline. To paint the area within the outline, we use the fillXxxx(...) methods. For instance, the code below would fill a rectangle with yellow color while having a red outline. Notice that the arguments remain the same. Code section 9.7: Drawing a yellow rectangle with a red outline...public class MyCanvas extends Canvas {    ...    public void paint(Graphics graphics) {        graphics.setColor(Color.yellow);        graphics.fillRect(10, 10, 100, 100);        graphics.setColor(Color.red);        graphics.drawRect(10, 10, 100, 100);    }    ...}   Figure 9.6: A white circle drawn with a blue outline Drawing a circle is ever so easy? It is the same process as the syntax above only that the word Rect is changed to the word Oval. And don't ask me why oval? You simply don't have the method drawCircle(int, int, int) as you don't have drawSquare(int, int, int). Following is the application of Graphics code to draw a circle just to whet your appetite. Code section 9.8: Drawing a white circle with a blue outline...public class MyCanvas extends Canvas {    ...    public void paint(Graphics graphics) {        graphics.setColor(new Color(0,0,255));        graphics.drawOval(50, 50, 100, 100);    }    ...}